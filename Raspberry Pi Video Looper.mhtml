From: <Saved by Blink>
Snapshot-Content-Location: https://videolooper.de/
Subject: Raspberry Pi Video Looper
Date: Tue, 2 Sep 2025 23:23:32 -0400
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----MultipartBoundary--Qdz5NBvSgPXgAlU5iaD4K2RZx4FRjj0oS09NVs1W9a----"


------MultipartBoundary--Qdz5NBvSgPXgAlU5iaD4K2RZx4FRjj0oS09NVs1W9a----
Content-Type: text/html
Content-ID: <frame-2045BB46020C4543EC9B98DEA3FC73DF@mhtml.blink>
Content-Transfer-Encoding: quoted-printable
Content-Location: https://videolooper.de/

<!DOCTYPE html><html lang=3D"en"><head><meta http-equiv=3D"Content-Type" co=
ntent=3D"text/html; charset=3DUTF-8">
=09
	<title>Raspberry Pi Video Looper</title>
=09
	<link href=3D"https://videolooper.de/css.css" type=3D"text/css" rel=3D"sty=
lesheet" media=3D"screen, print">
	<link href=3D"https://videolooper.de/prism.css" rel=3D"stylesheet" media=
=3D"screen, print">

</head>
<body class=3D"language-bash">

<h1><a href=3D"https://videolooper.de/">Raspberry Pi Video Looper</a></h1>

<p>Make your Raspberry Pi loop a video file endlessly and seamlessly, witho=
ut showing any logo or breaks.</p>

<p>A simple, cheap and reliable media player/digital signage solution that =
just works. Free software. No configuration needed. The <a href=3D"https://=
github.com/adafruit/pi_video_looper/" target=3D"new">pi_video_looper</a> sc=
ript is all installed and configured. If you don't have the time, or the de=
sire, or the means to learn to code it yourself, this is for you.</p>


<div>
<h3 id=3D"contents">Things to get and do:</h3>
<ol class=3D"toc_list">
<li><a href=3D"https://videolooper.de/#download_latest">Download the image =
file</a></li>
<li><a href=3D"https://videolooper.de/#you_will_also_need">You will also ne=
ed</a></li>
<li><a href=3D"https://videolooper.de/#how_do_i_get_this_running">How do I =
get this running?</a></li>
<li><a href=3D"https://videolooper.de/#thats_it">That's it</a></li>
</ol>

<p>If you have specific needs or just want to know more: </p>
<ul class=3D"toc_list">=20
<li><a href=3D"https://videolooper.de/#audio_video_output_options">Audio/Vi=
deo output options</a></li>
	<ul>
	<li><a href=3D"https://videolooper.de/#sound">A note on sound</a></li>
	<li><a href=3D"https://videolooper.de/#hdmi_sound_raspberry4">HDMI sound o=
n Raspberry 4</a></li>
	<li><a href=3D"https://videolooper.de/#dac_sound">Using a sound card/DAC</=
a></li>
	<li><a href=3D"https://videolooper.de/#analogue_sound">Analogue sound</a><=
/li>
	<li><a href=3D"https://videolooper.de/#analogue_video">Analogue video</a><=
/li>
	<li><a href=3D"https://videolooper.de/#stuttering">Stuttering using analog=
ue video</a></li>
	<li><a href=3D"https://videolooper.de/#analogue_video_on_raspberry_4">Anal=
ogue video playback on Raspberry 4</a></li>
	<li><a href=3D"https://videolooper.de/#video_stretched_raspberry_4">HDMI v=
ideo stretched/distorted on Raspberry 4</a></li>
	<li><a href=3D"https://videolooper.de/#4k_video_playback">No 4K video play=
back</a></li>
	<li><a href=3D"https://videolooper.de/#multi_channel_video_in_sync">Multi-=
channel video in sync</a></li>

	</ul>
<li><a href=3D"https://videolooper.de/#customize">Customize it to your need=
s</a></li>
	<ul>
	<li><a href=3D"https://videolooper.de/#good_to_know_before_editing_the_sys=
tem">Good to know before editing the system</a></li>
	<li><a href=3D"https://videolooper.de/#logging_in">Logging in to the syste=
m</a></li>
	<li><a href=3D"https://videolooper.de/#remote_login_via_SSH">Remote login =
via SSH</a></li>
	<li><a href=3D"https://videolooper.de/#wifi">Connect to Wifi</a></li>
	<li><a href=3D"https://videolooper.de/#some_useful_commands">Some useful c=
ommands</a></li>
	<li><a href=3D"https://videolooper.de/#advanced_options">Setting advanced =
options</a></li>
	<li><a href=3D"https://videolooper.de/#playing_in_random_order">Example ad=
vanced option: Playing in random order</a></li>
	<li><a href=3D"https://videolooper.de/#documentation">Further documentatio=
n</a>
	</li></ul>
<li><a href=3D"https://videolooper.de/#thankyou">Thank You!</a>
</li><li><a href=3D"https://videolooper.de/#license">License</a>
</li><li><a href=3D"https://videolooper.de/#about">About</a>
</li></ul>
</div>



<h2 id=3D"download_latest">Download the image file</h2>

<p>This is the complete software package that turns the Raspberry into a vi=
deo looper. Tested on Raspberry Pi 1 B+ / 2B / 3B / 3B+ / 4B and Pi Zero WH=
. It does <strong>not</strong> work with the Raspberry Pi 5.</p>=20

<table>
	<tbody><tr> <th>Version</th>
	<th>uses pi_video_looper script version</th>
	<th>based on</th>
	<th>works with all boards up to</th>
	<th>MD5 checksum/<br>notes</th>
	</tr>
=09
	<tr>
	  <td><a href=3D"https://videolooper.de/video_looper_v2.9.zip">video_loope=
r_v2.9.zip</a><br> February 2025 (990 MB)</td>
	  <td><a href=3D"https://github.com/adafruit/pi_video_looper/" target=3D"n=
ew">v1.0.19</a></td>
	  <td>Raspberry OS Lite Legacy <br>(2022-01-28-raspios-buster-armhf-lite)<=
/td>
	  <td>Raspberry Pi 4 (but not 5)<a href=3D"https://videolooper.de/#rpi4"><=
/a></td>
	  <td><p>5d18d114f01bf597c642f2a49325b3a9</p><p>Built with sdm. Expand the=
 filesystem with raspi-config if you want to play video directly from the S=
D card.</p></td>
	</tr>
</tbody></table>
=09
=09

<br>
<p id=3D"download_earlier_versions">Earlier versions of the video looper, w=
hich might come in handy if you experience problems with older hardware.</p=
>

<table>
	<tbody><tr> <th>Version</th>
	<th>uses pi_video_looper script version</th>
	<th>based on</th>
	<th>works with all boards up to</th>
	<th>MD5 checksum</th>
	</tr>
=09
		<tr>
	  <td><a href=3D"https://videolooper.de/video_looper_v2.8.zip">v.2.8 =E2=
=80=93 February 2024 </a>(820 MB)</td>
	  <td><a href=3D"https://github.com/adafruit/pi_video_looper/" target=3D"n=
ew">v1.0.17</a></td>
	  <td>Raspberry OS Lite Legacy <br>(2022-01-28-raspios-buster-armhf-lite)<=
/td>
	  <td>Raspberry Pi 4 (but not 5)<a href=3D"https://videolooper.de/#rpi4"><=
/a></td>
	  <td><p>53afed4e87e2908adfd0e1581795f2a7</p><p>Built with sdm. Expand the=
 filesystem with raspi-config if you want to play video directly from the S=
D card.</p></td>
	</tr>
=09
		<tr>
	  <td><a href=3D"https://videolooper.de/video_looper_v2.7.zip">v.2.7 =E2=
=80=93 January 2024 </a>(765 MB)</td>
	  <td><a href=3D"https://github.com/adafruit/pi_video_looper/" target=3D"n=
ew">v1.0.15</a></td>
	  <td>Raspberry OS Lite Legacy <br>(2022-01-28-raspios-buster-armhf-lite)<=
/td>
	  <td>Raspberry Pi 4 <a href=3D"https://videolooper.de/#rpi4"></a></td>
	  <td><p>cd7e76f73f62fe2160a46a211b900522</p><p>Built with sdm. Expand the=
 filesystem with raspi-config if you want to play video directly from the S=
D card.</p></td>
	</tr>
=09
	<tr>
	  <td><a href=3D"https://videolooper.de/video_looper_v2.6.zip">v.2.6 =E2=
=80=93 March 2022 </a>(690 MB)</td>
	  <td>v1.0.11</td>
	  <td>DietPi/Buster</td>
	  <td>Raspberry Pi 4 <a href=3D"https://videolooper.de/#rpi4"></a></td>
	  <td>943660dd1828b3d6f4016ade95c53261<br>+ fixes a bug with copy_mode by =
automatically expanding the file system if possible<br>+ fixes bad permissi=
ons of the image file inside the zip container</td>
	</tr>
=09
	<tr>
	  <td><a href=3D"https://videolooper.de/video_looper_v2.5.zip">v.2.5 =E2=
=80=93 Jan 2022 </a>(726 MB)</td>
	  <td>v1.0.10</td>
	  <td>DietPi/Buster</td>
	  <td>Raspberry Pi 4 <a href=3D"https://videolooper.de/#rpi4"></a></td>
	  <td>94c70f5e2b429315c00ea2ca5cb125bf</td>
	</tr>
=09
		<tr>
	  <td><a href=3D"https://videolooper.de/video_looper_v2.4.zip">v.2.4 =E2=
=80=93 Dec 2021 </a>(722 MB)</td>
	  <td>v1.0.8</td>
	  <td>DietPi/Buster</td>
	  <td>Raspberry Pi 4 <a href=3D"https://videolooper.de/#rpi4"></a></td>
	  <td>a18dcab441f66fca9c6455dd6f5e35a0</td>
	</tr>

	<tr>
	  <td><a href=3D"https://videolooper.de/video_looper_v2.3.zip">v.2.3 =E2=
=80=93 Dec 2020 </a>(530MB)</td>
	  <td>v1.0.7</td>
	  <td>DietPi/Buster</td>
	  <td>Raspberry Pi 4 <a href=3D"https://videolooper.de/#rpi4"></a></td>
	  <td>d2496ac08bdd1a038e3b84e4c80516aa</td>=09
	</tr>

=09
	<tr>
	  <td><a href=3D"https://videolooper.de/video_looper_v2.2.zip">v.2.2 =E2=
=80=93 Sept 2019 </a>(1.1GB)</td>
	  <td>v1.0.4</td>
	  <td>2019-07-10-raspbian-buster-lite </td>
	  <td>Raspberry Pi 4 <a href=3D"https://videolooper.de/#rpi4"></a></td>
	  <td>2921472a60374a164b8f21f9a92bf853</td>
	</tr>
=09
=09
	<tr>
	  <td><a href=3D"https://videolooper.de/video_looper_v2.1.zip">v.2.1 =E2=
=80=93 June 2019</a></td>
	  <td>v1.0.2</td>
	  <td>raspbian_lite-2019-04-09</td>
	  <td>Raspberry Pi 3 Model B+ (but not on the Raspberry Pi 4)</td>
	  <td>a2d47a852a54f6b50d5cb85ca87af67a</td>
	</tr>
=09
	<tr>
	  <td><a href=3D"https://videolooper.de/video_looper_v2.zip">v.2 =E2=80=93=
 June 2018</a></td>
	  <td>v1.0.0</td>
	  <td>Raspbian Stretch lite</td>
	  <td>Raspberry Pi 3 Model B</td>
	  <td>8cdf01374ed9e25d62f34f27df8c4425</td>
	</tr>
=09
	<tr>
	  <td><a href=3D"https://videolooper.de/video_looper_v1.zip">v.1 =E2=80=93=
 2015</a></td>
	   <td>v1.0.0</td>
	   <td>Raspbian Jessie lite</td>
	   <td>Raspberry Pi 2 Model B</td>
	   <td>cc6a2deed113967666cd5a95e8071593</td>
	</tr>
</tbody></table>


<h2 id=3D"you_will_also_need">You will also need</h2>

<ul>
<li class=3D"need">a <strong>Raspberry Pi</strong>. The software works with=
 all Raspberry boards. It works extremely well using any Raspberry Pi 2 or =
3; no need to buy a 4. It probably doesn't work on a 5.
<blockquote id=3D"rpi4">A note on the Raspberry Pi 4: The micro-HDMI connec=
tors are not very sturdy and the cable can come loose more easily, at least=
 in situations that call for robust connectors, like when you're setting up=
 an exhibition. If you need something sturdy and don't care about the booti=
ng process taking 30 seconds longer, my recommendation is to use this scrip=
t with a Raspberry Pi 3b+ or earlier, which have standard HDMI sockets, and=
 absolutely powerful enough for Full HD/1080p video playback (which is done=
 by a dedicated hardware component anyway, not the CPU or GPU).</blockquote=
></li>

<li class=3D"need">a <strong>power supply</strong> with enough power (at le=
ast 2.5A power for the Raspberry 3, and ideally 3A for the Raspberry Pi 4) =
and the correct connector (Micro-USB for Raspberry 3 and older, USB-C for t=
he Raspberry 4). It's confusing. See <a href=3D"https://projects.raspberryp=
i.org/en/projects/raspberry-pi-setting-up/1" target=3D"new">here</a> for a =
more detailed explanation if this you're new to this.</li>
<li class=3D"need">a <strong>MicroSD card</strong> with at least 4 GB capac=
ity. Don't get the cheapest one. Sandisk cards from a trusted vendor have w=
orked well for me (i.e. get them from a professional computing or photograp=
hy shop in your town. If you're ordering from Amazon make sure it's "Sold b=
y Amazon.com" or else it could be a fake card).</li>
<li class=3D"need">a <strong>USB stick</strong>, formatted to FAT32, ExFAT =
or NTFS</li>
<li class=3D"need">obviously a screen and HDMI or analogue video/audio cabl=
es to connect it all up</li>
</ul>




<h2 id=3D"how_do_i_get_this_running">How do I get this running?</h2>

<p>
Raspberry Pi boards are small in size, but they're full computers, and as s=
uch they need an operating system to start from. In this case that's the vi=
deo looper. You'll need to copy all the information from the image file you=
 downloaded onto the SD card, which then serves as the system hard disk. Pl=
ease follow i.e. <a href=3D"https://www.raspberrypi.com/documentation/compu=
ters/getting-started.html#using-raspberry-pi-imager" target=3D"new">these</=
a> instructions to clone the downloaded image file to the card. No need to =
unpack the zip file. Most SD-card flashing software can use compressed imag=
e files. The <a href=3D"https://www.raspberrypi.com/software/" target=3D"ne=
w">Raspberry Pi Image</a>r works well, as does <a href=3D"https://www.balen=
a.io/etcher/" target=3D"new">balenaEtcher</a>. I still like <a href=3D"http=
s://www.tweaking4all.com/hardware/raspberry-pi/applepi-baker-v2/" target=3D=
"new">ApplePiBaker</a>.</p>

<p>Once that is done, insert the SD card into the Raspberry and connect it =
to a display (using either the HDMI or the analogue video output, depending=
 on what you're working with). </p>

<p>As the last step start it up by plugging the power adapter into the main=
s socket. That's literally it.</p>

<p>Now the only thing that is missing is your video, which should be a stan=
dard h.264 mp4 file. It can be up to 1080p ("Full HD") in size. Smaller res=
olutions are OK, of course, but it won't play anything higher. When you enc=
ode your video or export it from your editing suite, don't make the bitrate=
 too high: The difference won't show but it might make the video stutter if=
 you go crazy with quality. Adafruit provide <a href=3D"https://learn.adafr=
uit.com/raspberry-pi-video-looper/omxplayer"> some (still valid) tips on en=
coding video</a> for the video looper.
</p>

<p>The video needs to be in the root folder of your USB flash drive/stick (=
meaning, directly on it). If you have more than one video, it'll play them =
in alphabetical order, and then loop around. The script will ignore anythin=
g that is kept in subfolders.</p>

<p>You can hot-swap USB sticks. Remove and insert a new one and it'll autom=
atically start to play any files on it. </p>

<p>It's also possible to configure the video looper to copy any files it fi=
nds on a connected USB stick to its internal SD card, which means you don't=
 need the stick connected anymore. This is called <em>copy_mode</em>; see <=
a href=3D"https://videolooper.de/#advanced_options">Setting advanced option=
s</a> for more info. Same goes for playback in random order.</p>

<p>A tip: As a full, working computer, the Raspberry would prefer to be shu=
t down properly. It seems to be OK for a while with simply being unplugged =
from power, but probably won't tolerate dozens of times, as the SD card can=
 corrupt. If you can, just leave it running. It's built to run forever (and=
 as a bonus uses very little energy).</p>

<p>To shut it down properly, connect a keyboard and hit the <code class=3D"=
 language-bash">p</code> key, or connect a button via GPIO.</p>


<h3 id=3D"keyboard_commands">Keyboard commands</h3>

<ul>
<li><code class=3D" language-bash">k</code> to skip the playback of the cur=
rent video (or restart playback if you have just one video file)</li>
<li><code class=3D" language-bash">s</code> to stop playback; hit it again =
to restart</li>
<li><code class=3D" language-bash">escape <span class=3D"token punctuation"=
>(</span>esc<span class=3D"token punctuation">)</span></code> to quit the p=
layer (after which you can <a href=3D"https://videolooper.de/#logging_in">l=
og in</a>)</li>
<li><code class=3D" language-bash">p</code> to power off the system</li>
</ul>

<h3 id=3D"thats_it">That's it</h3>
<p>If you just want simple looping playback, this is really all you need to=
 do. Feel free, of course, to read on, if you have specific needs or just w=
ant to know more.</p>



<hr>


<h2 id=3D"audio_video_output_options">Audio/Video output options</h2>

<p>There are several ways to output the video and audio signals. In most ca=
ses, you will probably want to use HDMI for both.</p>

<h3 id=3D"sound">A note on sound</h3>
<p>The script uses both the 3,5 mm jack and HDMI by default for sound outpu=
t. Note that the quality of the sound output on the analogue 3,5 mm jack is=
 not as high-end as with some other media players. Using the digital HDMI s=
ound output is the easiest and best-quality option.</p><p>

</p><h3 id=3D"hdmi_sound_raspberry4">HDMI sound on Raspberry 4</h3>
<p>Only the mini HDMI socket right next to the USB-C power socket will prov=
ide sound over HDMI.</p>

<h3 id=3D"dac_sound">Using a sound card/DAC</h3>
<p>Versions 2.3 up to 2.6 of this looper were based on DietPi. This distrib=
ution makes it easy to add a digital-analogue converter (DAC) for high qual=
ity analogue audio. Connect the DAC to the Raspberry and boot it up. Exit t=
he looper with <code class=3D" language-bash">escape <span class=3D"token p=
unctuation">(</span>esc<span class=3D"token punctuation">)</span></code>. <=
a href=3D"https://videolooper.de/#logging_in">Log in</a>, enter <code class=
=3D" language-bash"><span class=3D"token function">sudo</span> dietpi-confi=
g</code> and in Audio Options choose your soundcard. Wait for the drivers t=
o install (your Raspi needs an Internet connection for that) and reboot. Th=
en edit <code class=3D" language-bash">/boot/video_looper.ini</code>, deact=
ivate <code class=3D" language-bash">sound <span class=3D"token operator">=
=3D</span> both</code> by inserting a <code class=3D" language-bash"><span =
class=3D"token comment" spellcheck=3D"true">#</span></code> in front, and a=
ctivate <code class=3D" language-bash">sound <span class=3D"token operator"=
>=3D</span> alsa</code>. Save and quit. Then enter <code class=3D" language=
-bash">restart</code> to reload with changed settings.</p>

<h3 id=3D"analogue_sound">Analogue sound</h3>
<p>If you have to use analogue sound, but there's something wrong with the =
quality (this can happen on a Raspberry Pi 4), try editing <code class=3D" =
language-bash">/boot/config.txt</code> and add the line <code class=3D" lan=
guage-bash">audio_pwm_mode<span class=3D"token operator">=3D</span>2</code>=
 at the bottom. <br>
Then edit <code class=3D" language-bash">/boot/video_looper.ini</code> and =
find the line that says <code class=3D" language-bash">sound <span class=3D=
"token operator">=3D</span> both</code> and disable it by adding a <code cl=
ass=3D" language-bash"><span class=3D"token comment" spellcheck=3D"true">#<=
/span></code> in front. Then remove the hash from the line that says <code =
class=3D" language-bash">sound <span class=3D"token operator">=3D</span> lo=
cal</code> to activate it. Save and quit. Then reboot.</p>

<p>You can edit these files directly on your computer when the SD card is i=
nserted. Alternatively, attach a keyboard, hit <code class=3D" language-bas=
h">esc</code> to quit the looper and follow the instructions at <a href=3D"=
https://videolooper.de/#logging_in">Logging in</a>.</p>


<h3 id=3D"analogue_video">Analogue video</h3>

<p>On older versions of the Raspberry Pi (up to the 3), the looper outputs =
to both HDMI and analogue PAL video (this changes on a Raspberry 4 and high=
er, see below).</p>

<p>If you need to change the video resolution or position, do that also via=
 editing the <code class=3D" language-bash">video_looper.ini</code> file. S=
ee <a href=3D"https://videolooper.de/#customize">below</a> for how to do th=
at. Omxplayer doesn't respect anything you set in <code class=3D" language-=
bash">config.txt</code> (which is where you'd normally set the Raspberry's =
resolution). Instead you need to edit the line in <code class=3D" language-=
bash">video_looper.ini</code> that starts with <code class=3D" language-bas=
h">extra_args</code> and add i.e. <code class=3D" language-bash">--win 40, =
20, 704, 560</code> to position the video directly. See the <a href=3D"http=
s://github.com/popcornmix/omxplayer#synopsis" target=3D"new">Omxplayer</a> =
docs for all options. If you do that while logged in via SSH you can save a=
 lot of time, no need for constant SD-card swapping between your computer a=
nd the Raspberry.</p>

<h3 id=3D"stuttering">Stuttering using analogue video</h3>
<p>If you experience playback issues  using the Raspberry's analogue output=
 (stuttering video) it helps to change some settings by editing the <code c=
lass=3D" language-bash">video_looper.ini</code> text file that's in the boo=
t partition of the SD card. Find the line that says <code class=3D" languag=
e-bash">sound <span class=3D"token operator">=3D</span> both</code> and dis=
able it by adding a <code class=3D" language-bash"><span class=3D"token com=
ment" spellcheck=3D"true">#</span></code> in front. Then remove the hash fr=
om the line that says <code class=3D" language-bash">sound <span class=3D"t=
oken operator">=3D</span> local</code>, effectively activating it.</p>

<p>Another solution to the stuttering analogue video problem is to edit <co=
de class=3D" language-bash">/boot/config.txt</code> and add the line <code =
class=3D" language-bash">audio_pwm_mode<span class=3D"token operator">=3D</=
span>0</code> at the bottom. From what I understand this degrades the analo=
gue sound quality, though, so try the above solution first.</p>

<p>If all this fails, try earlier versions of the looper (which will then r=
equire earlier versions of the Raspberry board). Video playback is done by =
a dedicated chip, which hasn't changed since forever. So if 1080p videos pl=
ay flawlessly even on Raspberry Pi 1 Model B, why not use those for analogu=
e video. </p>




<h3 id=3D"analogue_video_on_raspberry_4">Analogue video playback on Raspber=
ry 4</h3>
<p>Disabled by default. Find this line in <code class=3D" language-bash">/b=
oot/config.txt</code> and remove the leading #:<br>
<code class=3D" language-bash">enable_tvout<span class=3D"token operator">=
=3D</span>1</code><br>
to enable analogue video output on the RPi4. Once rebooted, HDMI stops work=
ing. To re-enable HDMI output, just comment out  those two lines again.<br>
TBH, I've found it's a lot easier to use earlier versions of the Raspberry =
Pi for composite video.</p>

<h3 id=3D"video_stretched_raspberry_4">HDMI video stretched/distorted on Ra=
spberry 4</h3>
<p>If you play a 16:9 video on a screen with a different aspect ratio, Rasp=
berry Pi 4s may stretch the video to full screen. To disable this, find the=
se lines in <code class=3D" language-bash">/boot/config.txt</code> and remo=
ve them:<br>
<code class=3D" language-bash">dtoverlay<span class=3D"token operator">=3D<=
/span>vc4-fkms-v3d</code><br>
<code class=3D" language-bash">max_framebuffers<span class=3D"token operato=
r">=3D</span>2</code><br>
Then restart.
</p>

<h3 id=3D"4k_video_playback">No 4K video playback</h3>
<p>I'm sorry to say that this won't play video in 4K. Omxplayer, the softwa=
re that actually plays the videos in the looper, relies on a hardware compo=
nent of the Raspberry to play video. This is why even the first Raspberries=
 can smoothly play 1080p video. This hardware component is designed to play=
 back H.264 video, with 1080p video as the maximum resolution (1920x1080 px=
).</p>

<p>4K video uses a different codec called HEVC/ H.265, which is not support=
ed by the Raspberry GPU or omxplayer.</p>

<p>Omxplayer can display to a 4K screen but can only decode video with code=
cs supported by the hardware, which are limited to 1920x1080. See <a href=
=3D"https://github.com/popcornmix/omxplayer/issues/716" target=3D"new">here=
</a> for detailed info.</p>

<h3 id=3D"multi_channel_video_in_sync">Multi-channel video in sync</h3>
<p>Note that this setup doesn't sync multiple synchronized players. Have a =
look instead at <a href=3D"https://github.com/turingmachine/omxplayer-sync"=
 target=3D"new">omxplayer-sync</a> or my own (very outdated) <a href=3D"htt=
ps://www.khm.de/~sievers/net/omxplayer-sync.html">image</a> of that.</p>

<hr>


<h2 id=3D"customize">Customize it to your needs</h2>=20

<h3 id=3D"good_to_know_before_editing_the_system">Good to know before editi=
ng the system</h3>
<ul>
<li>The operating system's password was changed to <code class=3D" language=
-bash">video</code></li>
<li><code class=3D" language-bash">/boot/config.txt</code> was amended to o=
utput analogue PAL video</li>
<li>Only omxplayer is being used (the script was installed with the <code c=
lass=3D" language-bash">no_hello_video</code> option)</li>

<!--=20
<li>I also had to comment out <code>dtoverlay=3Dvc4-fkms-v3d</code> in <cod=
e>/boot/config.txt</code> to make sure that omxplayer plays nice with the R=
aspberry 4</li>
 -->
<li>Some aliases have been set in <code class=3D" language-bash">.bashrc</c=
ode> and I've added an <code class=3D" language-bash">motd</code></li>
<li>SSH is turned on and a public key is still in <code class=3D" language-=
bash">.ssh</code></li>
<li>The time zone was set to Europe/Amsterdam</li>
<li>Nothing has been done yet to enable Wifi. Set it up it via <code class=
=3D" language-bash"><span class=3D"token function">sudo</span> raspi-config=
</code>.=20
</li><li>Everything else is stock Raspberry OS Lite Legacy with just the lo=
oper script installed</li>
</ul>

<h3 id=3D"logging_in">Logging in to the system</h3>
<p>Connect a keyboard. Hit the <code class=3D" language-bash">escape</code>=
 key to quit the player. Hit the <code class=3D" language-bash">Return</cod=
e> key once, then enter <code class=3D" language-bash">pi</code>, followed =
by another <code class=3D" language-bash">Return</code>. Then enter the pas=
sword <code class=3D" language-bash">video</code> (yes, it's ok that you ca=
nnot see what you're typing), and confirm again with <code class=3D" langua=
ge-bash">Return</code>. Note that the keyboard is still the default GB layo=
ut.</p>

<h3 id=3D"remote_login_via_SSH">Remote login via SSH</h3>
<p>If you don't want to work with a directly connected keyboard, connect th=
e Pi to a local network using an Ethernet cable. Then use <code class=3D" l=
anguage-bash"><span class=3D"token function">ssh</span> pi@raspberrypi.loca=
l</code> to ssh into it when connected via Ethernet with a Mac.=20
<br>This should be <code class=3D" language-bash"><span class=3D"token func=
tion">ssh</span> pi@raspberrypi</code> if you're on Windows.=20
<br>Alternatively, you can use the looper's IP address, i.e. <code class=3D=
" language-bash"><span class=3D"token function">ssh</span> pi@192.168.0.5</=
code>. To find the LAN IP address, log in with an attached keyboard as desc=
ribed above. You'll see the IP adress, printed near the top, starting with =
'inet'. If you can't see an IP address there, your Raspberry is not connect=
ed to a network. </p>

<h3 id=3D"Wifi">Wifi</h3>
<p>Wireless networking is still disabled, as it is on any default Raspberry=
 OS images, because you need to set your country code first. Use <code clas=
s=3D" language-bash"><span class=3D"token function">sudo</span> dietpi-conf=
ig</code> to enable Wi-Fi and connect to a network.</p>

<h3 id=3D"some_useful_commands">Some useful commands</h3>
<p> Once you're logged in you can change settings directly via <code class=
=3D" language-bash"><span class=3D"token function">sudo</span> <span class=
=3D"token function">nano</span> /boot/videolooper.ini</code>. Move around w=
ith the arrow keys on your keyboard, make your edits, and then hit <code cl=
ass=3D" language-bash">CTRL+X</code> to quit nano and then <code class=3D" =
language-bash">Y</code> to confirm. Then enter <code class=3D" language-bas=
h">restart</code> to restart the looper with the changed settings.</p>

<p>Use <code class=3D" language-bash"><span class=3D"token function">sudo</=
span> <span class=3D"token function">nano</span> /boot/config.txt</code> to=
 edit basic Raspberry settings like HDMI and composite video and sound outp=
ut settings.</p>


<p>Again, use <code class=3D" language-bash">restart</code> to reload with =
changed settings. This becomes very useful i.e. when tinkering with the Omx=
player options as detailed just above - no need to restart the Pi.</p>



<h3 id=3D"advanced_options">Setting advanced options</h3>
<p>Activate advanced options like playlist resume, M3U playlists, copy_mode=
, video file location, GPIO control, etc  in the <code class=3D" language-b=
ash">videolooper.ini</code>. This file is stored in the /boot part of the R=
aspberry Pi's SD card, so you can edit it on your main computer. Or access =
it directly when logged in to the system. See <a href=3D"https://github.com=
/adafruit/pi_video_looper/blob/master/assets/video_looper.ini" target=3D"ne=
w">here</a> for the default configuration (which is what we use). All the o=
ptions are nicely explained in the file itself, and on the project's <a hre=
f=3D"https://github.com/adafruit/pi_video_looper#features-and-settings" tar=
get=3D"new">README</a>.</p>

<h3 id=3D"playing_in_random_order">Example advanced option: Playing in rand=
om order</h3>
<p>Here's how to enable random order, as an example:</p>
<ul>
<li> If you find it easier to use a graphical user interface, insert the SD=
 card into your computer. Find the <code class=3D" language-bash">videoloop=
er.ini</code> file and open it in a text editor. Change the line that says =
 <code class=3D" language-bash">is_random <span class=3D"token operator">=
=3D</span> <span class=3D"token boolean">false</span></code> to <code class=
=3D" language-bash">is_random <span class=3D"token operator">=3D</span> <sp=
an class=3D"token boolean">true</span></code>.</li>
<li> Alternatively edit it directly on the Raspberry itself. Quit the playe=
r and log in to the system as described in <a href=3D"https://videolooper.d=
e/#logging_in">Logging in</a>.  </li>
</ul>











<h3 id=3D"documentation">Further documentation</h3>
<p>In addition to the info given on this page, here are the original instru=
ctions on how to set up the VideoLooper yourself, i.e. for the learning exp=
erience, or if you don't trust a downloaded image file. This page also docu=
ments a ton of additional options that have been added in the last year, li=
ke support for GPIO control and other various special playback scenarios.</=
p>

<p><a href=3D"https://github.com/adafruit/pi_video_looper">https://github.c=
om/adafruit/pi_video_looper</a></p>


<p><a href=3D"https://learn.adafruit.com/raspberry-pi-video-looper?view=3Da=
ll">https://learn.adafruit.com/raspberry-pi-video-looper?view=3Dall</a></p>
<hr>


<h2 id=3D"thankyou">Thank You!</h2>
<p> Many thanks to Adafruit and to the maintainers on Github, especially To=
bias Perschon/@tofuSCHNITZEL.</p>


<h2 id=3D"license">License</h2>
<p>Released under the <a href=3D"http://www.gnu.org/copyleft/gpl.html" targ=
et=3D"new">GNU General Public License (GPL)</a></p>
<p>This software is supplied as is, with no guarantees whatsoever. If you l=
ike it, please consider giving something back to the community. Personally =
I think we should support any effort that helps to keep the globe a healthy=
 habitat for our children and all other species. We urgently need to team u=
p to make sure the biosphere survives.</p>



<h2 id=3D"about">About</h2>
<p>This image for the Raspberry was compiled by Christian Sievers, original=
ly for students at the <a href=3D"https://web.archive.org/web/2022080313304=
0/https://www.khm.de/surveillant_architectures/">KHM Surveillant Architectu=
res/ctrl-space</a> seminars from 2015 to 2022. I had seen too many students=
 freaking out about expensive and unreliable commercial media players, when=
 really they should be thinking about their art. So the idea was and still =
is to make a hassle-free, cheap and reliable media player available to ever=
yone. It's about accessibility. As it says on the tin, If you don't have th=
e time or the desire or the means to learn to code it yourself, this is for=
 you.</p>

<p>Also, Fuck Nazis. Support your local anti-fascist initiatives.</p>

<p>Any questions, comments or ideas to improve please get in touch. I'd be =
happy to hear from you if you like it, or just to know where it's being use=
d (all over the world, apparently):<br>
My profile at=20
<a href=3D"https://www.khm.de/lehrende/id.27806.christian-sievers/">Academy=
 of Media Arts Cologne</a>  //=20
I'm <a rel=3D"me" href=3D"https://mastodon.social/@Sie">@sie</a> and <a rel=
=3D"me" href=3D"https://digipres.club/@cusie">@cusie@digipres.club</a> on M=
astodon // =20
my <a href=3D"https://christiansievers.info/">own site documenting my artwo=
rk</a></p>


<a href=3D"https://videolooper.de/impressum.html">Impressum</a>





</body></html>
------MultipartBoundary--Qdz5NBvSgPXgAlU5iaD4K2RZx4FRjj0oS09NVs1W9a----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://videolooper.de/prism.css

@charset "utf-8";

code[class*=3D"language-"], pre[class*=3D"language-"] { color: black; backg=
round: none; text-shadow: white 0px 1px; font-family: Consolas, Monaco, "An=
dale Mono", "Ubuntu Mono", monospace; text-align: left; white-space: pre; w=
ord-spacing: normal; word-break: normal; overflow-wrap: normal; line-height=
: 1.5; tab-size: 4; hyphens: none; }

pre[class*=3D"language-"]::selection, pre[class*=3D"language-"] ::selection=
, code[class*=3D"language-"]::selection, code[class*=3D"language-"] ::selec=
tion { text-shadow: none; background: rgb(179, 212, 252); }

@media print {
  code[class*=3D"language-"], pre[class*=3D"language-"] { text-shadow: none=
; }
}

pre[class*=3D"language-"] { padding: 1em; margin: 0.5em 0px; overflow: auto=
; }

:not(pre) > code[class*=3D"language-"], pre[class*=3D"language-"] { backgro=
und: rgb(245, 242, 240); }

:not(pre) > code[class*=3D"language-"] { padding: 0.1em; border-radius: 0.3=
em; white-space: normal; }

.token.comment, .token.prolog, .token.doctype, .token.cdata { color: slateg=
ray; }

.token.punctuation { color: rgb(153, 153, 153); }

.namespace { opacity: 0.7; }

.token.property, .token.tag, .token.boolean, .token.number, .token.constant=
, .token.symbol, .token.deleted { color: rgb(153, 0, 85); }

.token.selector, .token.attr-name, .token.string, .token.char, .token.built=
in, .token.inserted { color: rgb(102, 153, 0); }

.token.operator, .token.entity, .token.url, .language-css .token.string, .s=
tyle .token.string { color: rgb(166, 127, 89); background: rgba(255, 255, 2=
55, 0.5); }

.token.atrule, .token.attr-value, .token.keyword { color: rgb(0, 119, 170);=
 }

.token.function { color: rgb(221, 74, 104); }

.token.regex, .token.important, .token.variable { color: rgb(238, 153, 0); =
}

.token.important, .token.bold { font-weight: bold; }

.token.italic { font-style: italic; }

.token.entity { cursor: help; }

pre.line-numbers { position: relative; padding-left: 3.8em; counter-reset: =
linenumber 0; }

pre.line-numbers > code { position: relative; }

.line-numbers .line-numbers-rows { position: absolute; pointer-events: none=
; top: 0px; font-size: 100%; left: -3.8em; width: 3em; letter-spacing: -1px=
; border-right: 1px solid rgb(153, 153, 153); user-select: none; }

.line-numbers-rows > span { pointer-events: none; display: block; counter-i=
ncrement: linenumber 1; }

.line-numbers-rows > span::before { content: counter(linenumber); color: rg=
b(153, 153, 153); display: block; padding-right: 0.8em; text-align: right; =
}

.command-line-prompt { border-right: 1px solid rgb(153, 153, 153); display:=
 block; float: left; font-size: 100%; letter-spacing: -1px; margin-right: 1=
em; pointer-events: none; user-select: none; }

.command-line-prompt > span::before { color: rgb(153, 153, 153); content: "=
 "; display: block; padding-right: 0.8em; }

.command-line-prompt > span[data-user]::before { content: "[" attr(data-use=
r) "@" attr(data-host) "] $"; }

.command-line-prompt > span[data-user=3D"root"]::before { content: "[" attr=
(data-user) "@" attr(data-host) "] #"; }

.command-line-prompt > span[data-prompt]::before { content: attr(data-promp=
t); }
------MultipartBoundary--Qdz5NBvSgPXgAlU5iaD4K2RZx4FRjj0oS09NVs1W9a----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://videolooper.de/css.css

@charset "utf-8";

html { padding: 0px 1em 0px 1.2em; }

h1 { padding: 1em 0px 0em; }

h2 { padding: 2em 0px 0em; }

h3 { padding: 1em 0px 0em; margin: 0px 0px -0.3em; }

h4 { padding: 1em 0px 0em; margin: 0px 0px -0.3em; }

li.need { padding-bottom: 1em; }

img { max-width: 100%; display: block; height: auto; }

blockquote { margin: 0px 2em; padding: 0.3em 0px 0.5em; }

pre { margin: 0px; padding: 0px; }

table { border-collapse: collapse; }

table, th, td { border: 1px solid black; padding: 4px; }

hr { margin: 4em 0px 0px; }
------MultipartBoundary--Qdz5NBvSgPXgAlU5iaD4K2RZx4FRjj0oS09NVs1W9a------
